{"version":3,"sources":["Component/QuizComponent/Quiz.jsx","Component/HomeComponent/HomeComponent.jsx","Component/ResultComponent/ResultComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["x","Home","className","to","React","Component","Result","correct","wrong","i","console","log","this","props","marks","quote","percent","parseInt","src","alt","Object","keys","length","attempted","Quiz","timer","state","initial","list","setState","clearInterval","intervalId","isrender","quit","previous","alert","next","nextquestion","e","option","answer","target","innerHTML","document","getElementsByClassName","style","backgroundColor","setTimeout","axios","get","then","res","data","catch","err","setInterval","querySelectorAll","question","id","onClick","options","App","basename","window","location","pathname","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1ab5231.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Quiz.css'\r\nimport Result from '../ResultComponent/ResultComponent';\r\n\r\nvar x; //used to hold the current question number\r\nvar attempted={}; //this object hold the answers are correct or wrong\r\nclass Quiz extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n                   list:[],      //contain list of question related things got from api\r\n                   timer:120,    //totlay 120s and we need to answer all the questions within 120s\r\n                   i:0,          //question number\r\n                   initial:120,  //hold the current time and after 10s next question will popup\r\n                   isrender:\"quiz\"//render which component\r\n                }\r\n    }\r\n    componentDidMount(){\r\n            axios.get(\"https://my-json-server.typicode.com/Naveen132895/quiz-api/questions\")\r\n                .then(res=>res.data)\r\n                .then(res=>{this.setState({list:res})})\r\n                .catch(err=>console.log(err))\r\n                this.intervalId = setInterval(this.timer, 1000); //starts a timer for 120s\r\n            }\r\n    timer=()=> { \r\n        //after 10s next question will rise \r\n        if(this.state.initial-this.state.timer===10 && this.state.i+1<this.state.list.length){ \r\n            console.log(this.state.i,this.state.list.length)\r\n            this.setState({i:this.state.i+1,\r\n                initial:this.state.timer,\r\n                timer:this.state.timer - 1})\r\n        }\r\n        else if (this.state.timer < 1) {\r\n             clearInterval(this.intervalId);\r\n             this.setState({isrender:\"result\"})\r\n        }\r\n        else{\r\n            this.setState({timer: this.state.timer - 1})\r\n            }\r\n        }\r\n    quit=()=>{ //when quit button is clicked then show the result\r\n        this.setState({isrender:\"result\"})\r\n    }\r\n    previous=()=>{//go to previous question when previous button is clicked\r\n        if(this.state.i===0){\r\n            alert(\"This is the First Question\")\r\n        }\r\n        else{\r\n            this.setState({initial:this.state.timer,\r\n                           i:this.state.i-1})\r\n        }\r\n    }\r\n    next=()=>{//go to next question when next button is clicked\r\n\r\n        if(this.state.i+1===this.state.list.length){\r\n            alert(\"Quiz is fininshed\")\r\n            this.setState({isrender:\"result\"})\r\n        }\r\n        else{\r\n            this.setState({initial:this.state.timer,\r\n                i:this.state.i+1})\r\n        }\r\n    }\r\n    nextquestion=(e,option)=>{ //when question is answerd then add it into attempted object and gives color based on the answer\r\n        x=this.state.isrender\r\n        console.log(this.state.list[this.state.i].answer)\r\n        if(this.state.list[this.state.i].answer===e.target.innerHTML){\r\n                attempted[this.state.i+1]=[option,\"correct\"];\r\n                document.getElementsByClassName(\"option\")[option].style.backgroundColor=\"green\";\r\n                if(this.state.i+1===this.state.list.length){\r\n                     x=\"result\"\r\n                }\r\n                setTimeout(()=>{this.setState({\r\n                i:this.state.i+1,\r\n                initial:this.state.timer,\r\n                isrender:x})},1000)\r\n            }\r\n        else{\r\n            attempted[this.state.i+1]=[option,\"wrong\"];\r\n            if(this.state.i+1===this.state.list.length){\r\n                x=\"result\"\r\n           }\r\n            document.getElementsByClassName(\"option\")[option].style.backgroundColor=\"red\";\r\n            setTimeout(()=>{this.setState({\r\n                i:this.state.i+1,\r\n                initial:this.state.timer,\r\n                isrender:x})\r\n                },1000)\r\n            }\r\n        \r\n    }\r\n    render(){\r\n        console.log(this.state)\r\n        if(this.state.i>0 && this.state.i<this.state.list.length && this.state.isrender===\"quiz\"){\r\n            document.querySelectorAll(\".option\")[0].style.backgroundColor=\"blue\";\r\n            document.querySelectorAll(\".option\")[1].style.backgroundColor=\"blue\"\r\n            document.querySelectorAll(\".option\")[2].style.backgroundColor=\"blue\"\r\n            document.querySelectorAll(\".option\")[3].style.backgroundColor=\"blue\"\r\n        }\r\n        var x=this.state.i;\r\n    return(\r\n           <>\r\n           { (this.state.list.length>0 && x<this.state.list.length && this.state.isrender===\"quiz\")&&\r\n               <div className=\"main\">\r\n                    <div>Questions</div>\r\n                    <div className=\"question\">\r\n                        <div>{x+1} of 10</div>\r\n                        <div>{this.state.list[x].question}</div>\r\n                        <div id=\"timer\">{this.state.timer}</div>\r\n                    </div>\r\n                <div className=\"answers\">\r\n                    <button className=\"option\" onClick={(e)=>this.nextquestion(e,0)}>{this.state.list[x].options[0]}</button>\r\n                    <button className=\"option\" onClick={(e)=>this.nextquestion(e,1)}>{this.state.list[x].options[1]}</button>\r\n                    <button className=\"option\" onClick={(e)=>this.nextquestion(e,2)}>{this.state.list[x].options[2]}</button>\r\n                    <button className=\"option\" onClick={(e)=>this.nextquestion(e,3)}>{this.state.list[x].options[3]}</button>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <button onClick={this.previous}>Previous</button>\r\n                    <button onClick={this.next}>Next</button>\r\n                    <button onClick={this.quit}>Quit</button>\r\n                </div>\r\n               </div>\r\n           }\r\n           {( this.state.isrender===\"result\") &&\r\n             <>\r\n             <Result marks={attempted}/>\r\n             </>\r\n           }\r\n           </>\r\n           )\r\n    }\r\n}\r\nexport default Quiz\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends React.Component{\r\n     render(){\r\n         return(<div className=\"homepage\">\r\n             <div>Quiz App</div>\r\n             <div><Link to=\"/quiz\"><button>PLAY</button></Link></div>\r\n         </div>)\r\n     }\r\n}\r\nexport default Home","import React from 'react';\r\nimport './Result.css';\r\n\r\n\r\nclass Result extends React.Component{\r\n      render(){\r\n          var correct=0;//hold number of correctly answered questions\r\n          var wrong=0;//hold number of wrongly answered questions\r\n          console.log(this.props.marks)\r\n          for (var i in this.props.marks){\r\n              if((this.props.marks[i])[1]===\"correct\"){\r\n                  correct+=1\r\n              }\r\n              else{\r\n                  wrong+=1\r\n              }\r\n          }\r\n          \r\n          var quote=\"\"\r\n          var percent=parseInt((correct/11*100));//calculating the percentage based on the answers and gives us a quote based on the percentage\r\n          if(percent>90){\r\n              quote=\"Excellent\"\r\n          }\r\n          else if(percent>75){\r\n                quote=\"Good\"\r\n          }\r\n          else if(percent>50){\r\n              quote=\"Average\"\r\n          }\r\n          else{\r\n              quote=\"Need to Practice more\"\r\n          }\r\n          return(<div className=\"result\">\r\n              <div className=\"res\">\r\n              <img src=\"https://cdn-0.emojis.wiki/emoji-pics/microsoft/check-mark-microsoft.png\" alt=\"tick pic\"></img>\r\n              <div>Result</div>\r\n              </div>\r\n              <div className=\"box\">\r\n                  <div>{quote}</div>\r\n                  <div>{percent}%</div>\r\n                  <pre><span>Total Number of Questions</span><span>11</span></pre>\r\n                  <pre><span>Total Number of Attempted Questions</span><span>{Object.keys(this.props.marks).length}</span></pre>\r\n                  <pre><span>Total Number of Correct Answers</span><span>{correct}</span></pre>\r\n                  <pre><span>Total Number of Wrong Answers</span><span>{wrong}</span></pre>\r\n              </div>\r\n              \r\n              <button className=\"stop\">BackToHome</button>\r\n              <button className=\"play\">PlayAgain</button>\r\n          </div>)\r\n      }\r\n}\r\nexport default Result;","import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link\n} from 'react-router-dom';\n\nimport './App.css';\nimport Home from './Component/HomeComponent/HomeComponent';\nimport Quiz from './Component/QuizComponent/Quiz'\nfunction App() {\n  return (\n  <Router basename={window.location.pathname || ''}>\n    <Switch>\n      <Route exact path=\"/\">\n           <Home></Home>\n      </Route>\n      <Route path=\"/quiz\">\n        <Quiz/>\n      </Route>\n    </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}